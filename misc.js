javascript:(async()=>{    let t=[...document.querySelectorAll("h3.bname > a")];    if(!t.length)return alert('No <h3 class="bname"> with <a> found.');    try{        let e=await fetch("https://curly-pond-9050.yuush.workers.dev/titles.json");        if(!e.ok)throw Error(e.status);        let o=await e.json(),            r=new Set(o.map(t=>t.title.trim().toLowerCase()));        t.forEach(a=>{            let titleText = a.textContent.trim(),                isMatch = r.has(titleText.toLowerCase());            a.style.cssText = `background-color:${isMatch?"red":"green"};font-weight:bold;color:${isMatch?"black":"white"};`;        });    }catch(l){        alert("Fetch failed: "+l);    }})();


javascript:(async()=>{let t=[...document.querySelectorAll("body.dark-mode .book-detailed-item .meta .title h3 a")];if(!t.length)return alert('No <h3 class="novel-title"> found.');try{let e=await fetch("https://curly-pond-9050.yuush.workers.dev/titles.json");if(!e.ok)throw Error(e.status);let o=await e.json(),r=new Set(o.map(t=>t.title.trim().toLowerCase()));t.forEach(t=>{let n=t.textContent.trim().replace(/\([^)]*\)/g,'').trim(),a=r.has(n.toLowerCase());t.style.cssText=`background-color:${a?"red":"green"};font-weight:bold;`})}catch(l){alert("Fetch failed: "+l)}})();


javascript:(async()=>{let t=[...document.querySelectorAll(".novel_cell h3")];if(!t.length)return alert('No <h3 class="novel-title"> found.');try{let e=await fetch("https://curly-pond-9050.yuush.workers.dev/titles.json");if(!e.ok)throw Error(e.status);let o=await e.json(),r=new Set(o.map(t=>t.title.trim().toLowerCase()));t.forEach(t=>{let n=t.textContent.trim().replace(/\([^)]*\)/g,'').trim(),a=r.has(n.toLowerCase());t.style.cssText=`background-color:${a?"red":"green"};font-weight:bold;`})}catch(l){alert("Fetch failed: "+l)}})();

javascript:(async()=>{let t=[...document.querySelectorAll("h3.truyen-title")];if(!t.length)return alert('No <h3 class="truyen-title"> found.');try{let e=await fetch("https://curly-pond-9050.yuush.workers.dev/titles.json  ");if(!e.ok)throw Error(e.status);let o=await e.json(),r=new Set(o.map(t=>t.title.trim().toLowerCase()));t.forEach(t=>{let e=t.textContent.trim(),o=r.has(e.toLowerCase());t.style.cssText=`background-color:${o?"red":"green"};font-weight:bold;`})}catch(l){alert("Fetch failed: "+l)}})();
